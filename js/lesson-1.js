// ЗАВДАННЯ 1
// Запропонуйте користувачу ввести число за допомогою prompt().
// Збережіть введене значення у змінну number.
// Перевірте, чи дорівнює змінна number числу 10:
//    Якщо так – виведіть повідомлення 'Вірно' у alert().
//    Якщо ні – виведіть 'Невірно'.

// Підказка: prompt завжди повертає рядок (String), тому перед перевіркою
// перетворіть значення на число за допомогою Number().

-----------------------------------------------------------------------------------------------------------------------------------
// ЗАВДАННЯ 2
// У змінній min лежить випадкове число від 0 до 59.
// Визначте, в яку чверть години потрапляє
// це число (у першу, другу, третю чи четверту).
// Виведіть в alert відповідне повідомлення, наприклад:
// "10 входить в першу чверть"

// const min = Math.floor(Math.random() * (59 - 0) + 0);

// ФОРМУЛИ
// Math.floor(Math.random() * (max - min) ); // від 0 до але не включно максимум
// Math.floor(Math.random() * (max - min) + min); // Максимум не включается, минимум включается
// Math.floor(Math.random() * (max - min + 1) + min); //   включно мінімальне і максимальне значення

// ФОРМУЛИ
// function randomither(max) {
//   return Math.floor(Math.random() * max);
// }
    
    
    
-----------------------------------------------------------------------------------------------------------------------------------
// ЗАВДАННЯ 3
// якщо має значення '2' - 'весна' і так далі.
// Розв'яжіть завдання через switch-case.
// Не забудьте про дефолтне значення, на випадок, якщо користувач
// введе в prompt щось інше. В такому випадку result має набувати значення:
// "Вибачте, але ви маєте ввести значення від 1 до 4 включно".
// Значення змінної result виведіть в консоль.

// let seasonNumber = prompt("Введіть число від 1 до 4:");
// let result;

// switch (seasonNumber) {
//   case "1":
//     result = "зима";
//     break;
//   case "2":
//     result = "весна";
//     break;
//   case "3":
//     result = "літо";
//     break;
//   case "4":
//     result = "осінь";
//     break;
//   default:
//     result = "Вибачте, але ви маєте ввести значення від 1 до 4 включно";
// }

// console.log(result);
-----------------------------------------------------------------------------------------------------------------------------------
    
// ЗАВДАННЯ 4
// Отримуйте від користувача число (кількість хвилин) через prompt
// і виводьте у консоль рядок у форматі годин та хвилин.
// Приклад: користувач вводить в prompt '70' -> в консолі відобразиться '01:10'.
// Корисне посилання для відображення годин та хвилин у потрібному форматі ('01' замість '1'):
// <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart#examples>

// ВИКОНАННЯ
// Запитуємо у користувача введення кількості хвилин
// const minutes = prompt("Введіть кількість хвилин:");

// Обчислюємо кількість повних годин
// const hours = Math.floor(minutes / 60); // Округлюємо вниз, щоб отримати лише цілі години

// Обчислюємо залишок хвилин після виділення повних годин
// const remainingMinutes = minutes % 60; // Оператор % дає залишок від ділення (хвилини, що залишилися)

// Форматуємо годинник у вигляді двох цифр (наприклад, '01' замість '1')
// const formattedTime = String(hours).padStart(2, '0') + ':' + String(remainingMinutes).padStart(2, '0');

// Виводимо відформатований час у консоль
// console.log(formattedTime);

// Як працює код:
// prompt("Введіть кількість хвилин:") – отримує введене користувачем значення у вигляді рядка.
// Math.floor(minutes / 60) – ділить введене число на 60 та округлює вниз, щоб отримати повні години.
// minutes % 60 – знаходить залишок хвилин, які залишилися після визначення годин.
// .padStart(2, '0') – забезпечує, що числа будуть у двоцифровому форматі (наприклад, 01, 02 тощо).
// console.log(formattedTime) – виводить отриманий результат у консоль.
-----------------------------------------------------------------------------------------------------------------------------------
// ЗАВДАННЯ 6
// Використайте цикл while, щоб вивести в console всі числа від 0 до 20 включно.

// Виконання завдання
// let i = 0;
// while (i <= 20) {
//   console.log(i);
//   i++;
// }

// Пояснення
// let i = 0; // (1. Оголошуємо змінну i та присвоюємо їй початкове значення 0.)

// while (i <= 20) {
//  (2. Починаємо цикл while. Умовою є: "поки i менше або дорівнює 20, виконувати тіло циклу".)
//   console.log(i); (3. Виводимо поточне значення i в консоль.)
//   i++;  (4. Збільшуємо i на 1 після кожної ітерації.)
// }
// Цей код починає з i = 0 і поступово збільшує i на 1 у кожній ітерації, доки i не стане більше 20.

// Покроковий розбір виконання:
// Ініціалізація:

// i = 0 (початкове значення).
// Перевірка умови (i <= 20):

// Якщо умова true, виконується тіло циклу.
// Якщо false, цикл зупиняється.
// Тіло циклу:

// Виводить i у консоль.
// Збільшує i на 1 (i++ еквівалентно i = i + 1).
// Повторення процесу:

// i = 0: перевірка → вивід у консоль → i стає 1.
// i = 1: перевірка → вивід у консоль → i стає 2.
// i = 2: перевірка → вивід у консоль → i стає 3.
// ...
// i = 20: перевірка → вивід у консоль → i стає 21.
// Завершення циклу:

// Коли i = 21, умова i <= 20 стає false, цикл припиняє виконання.
-----------------------------------------------------------------------------------------------------------------------------------
    
// ЗАВДАННЯ 7
// Умова
// Напишіть функцію getNumbers(min, max), що приймає 2 параметри -
// мінімальне і максимальне число відповідно.
// Напишіть цикл всередині функції, який виводить у консоль
// всі числа від max до min за спаданням.
// Окрім цього, підрахуйте суму всіх парних чисел в цьому циклі
// і поверніть її з функції.

// Виконання

// БЕЗ ПОЯСНЕННЯ
// function getNumbers(min, max) {
//   let evenSum = 0;
//   for (let i = max; i >= min; i--) {
//     console.log(i);
//     if (i % 2 === 0) {
//       evenSum += i;
//     }
//   }
//   return evenSum;
// }

// console.log("Сума парних чисел:", getNumbers(3, 10));

// З ПОЯСНЕННЯМ
// Функція приймає два параметри: мінімальне і максимальне значення
// function getNumbers(min, max) {
//   let evenSum = 0; // Змінна для збереження суми парних чисел

//Цикл for починається від max і йде до min включно, зменшуючи значення на 1
//   for (let i = max; i >= min; i--) {
//     console.log(i); // Вивід числа в консоль

//Перевіряємо, чи число є парним
//     if (i % 2 === 0) {
//       evenSum += i; // Якщо парне, додаємо його до суми
//     }
//   }

//   return evenSum; // Повертаємо суму парних чисел
// }

// Приклад виклику функції
// console.log("Сума парних чисел:", getNumbers(3, 10));

// Ця функція:
// Ініціалізує змінну evenSum, щоб зберігати суму парних чисел.
// Запускає цикл for, який іде від max до min, поступово зменшуючи значення.
// Виводить поточне число у консоль.
// Перевіряє, чи число парне (якщо воно ділиться на 2 без залишку).
// Додає парні числа до змінної evenSum.
// Повертає загальну суму парних чисел.
// Виклик getNumbers(3, 10) виведе числа від 10 до 3 та поверне суму всіх парних чисел у цьому діапазоні.
-----------------------------------------------------------------------------------------------------------------------------------
// ЗАВДАННЯ 8
// Напишіть функцію min(a, b), яка приймає 2 числа і повертає меньше з них.
// Потрібно додати перевірку, що функція отримує саме числа, в іншому випадку
// повертати з функції рядок - 'Not a number!'.

// Виконання
// Варіант 1
// function min(a, b) {
// Перевіряємо, чи обидва аргументи є числами
//     if (typeof a !== 'number' || typeof b !== 'number') {
//         return 'Not a number!'; // Якщо хоча б один аргумент не число, повертаємо повідомлення
//     }

// Порівнюємо числа та повертаємо менше з них
//     return a < b ? a : b;
// }

// Приклади використання
// console.log(min(5, 10)); // 5 (5 менше за 10)
// console.log(min(10, 5)); // 5 (5 менше за 10)
// console.log(min('5', 10)); // 'Not a number!' (перший аргумент не число)
// console.log(min(5, '10')); // 'Not a number!' (другий аргумент не число)
// console.log(min('hello', 'world')); // 'Not a number!' (обидва аргументи не числа)
-----------------------------------------------------------------------------------------------------------------------------------
// ЗАВДАННЯ 9
// Напишіть функцію isAdult(age), яка  приймає число - вік користувача і повертає true,
// якщо параметр age більше чи дорівнює 18.
// В іншому випадку вона запитує підтвердження через confirm
// і повертає його результат (true/false).

// Варіант 1
// function isAdult (age) {
//     if (age >= 18) {
//         return true;
//     } else {
//         const checkAdult = confirm('Are you adult?');
//         return checkAdult;
//     }
// }
// Варіант 2
// function isAdult (age) {
//     if (age >= 18) {
//         return true;
//     }
//     return confirm('Are you adult?');
// }

// Варіант 3
// function isAdult (age) {
//     return age >= 18 || confirm('Are you adult?');
// }

// console.log(isAdult(10));
-----------------------------------------------------------------------------------------------------------------------------------
// ЗАВДАННЯ 10
// Напишіть функцію fizzBuzz(num), яка приймає число і перевіряє кожне число від 1 до num:
// Якщо число ділитися  без остачі на 3 - виводить в консоль 'fizz',
// якщо ділиться  без остачі на 5 - виводить в консоль 'buzz',
// якщо ділиться  без остачі і на 3, і на 5 - виводить в консоль 'fizzbuzz'.

//ВИКОНАННЯ
// function fizzBuzz(num) {
//     for (let i = 1; i <= num; i++) {
//         if (i % 3 === 0 && i % 5 === 0) {
//             console.log('fizzbuzz');
//         } else if (i % 3 === 0) {
//             console.log('fizz');
//         } else if (i % 5 === 0) {
//             console.log('buzz');
//         } else {
//             console.log(i);
//         }
//     }
// }

// Викликаємо функцію з прикладом
// fizzBuzz(15);
